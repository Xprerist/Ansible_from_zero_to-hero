---

- hosts: all
  vars_files:
    - variables
  become: true
  pre_tasks:
    
    - name: install updates (Ubuntu)
      tags: always
      package:
        upgrade: dist
        update_cache: yes
      when: ansible_distribution == "Ubuntu"
    
    - name: install updates (CentOS)
      tags: always
      package:
        update_only: yes
        update_cache: yes
      when: ansible_distribution == "CentOS"


- hosts: ansible                                # add the User "Simone" to every Host, Prereq. for full Ansible automation
  become: true
  tasks:

    - name: create user simone
      tags: ansible
      user:
        name: simone
        groups: root

    - name: add ssh key for Simone
      tags: ansible
      authorized_key:
        user: simone
        key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILcumVrymijfssOBJRgv37LVqV3JWiEDuiNKd5eTYZEX jens 2025"

    - name: create user jensi
      tags: ansible
      user:
        name: jensi
        groups: root

    - name: add ssh key for Jensi
      tags: ansible
      authorized_key:
        user: jensi
        key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILcumVrymijfssOBJRgv37LVqV3JWiEDuiNKd5eTYZEX jens 2025"


    - name: Remove old sudo access for deployuser
      lineinfile:
        path: /etc/sudoers.d/jensi
        regexp: "^deployuser"                        # Regular expression - delete line for deployuser
        state: absent

    - name: Remove old sudo access for jensi
      lineinfile:
        path: /etc/sudoers.d/jensi
        regexp: "^jensi"                             # Regular expression - delete line for jensi
        state: absent

    - name: Add new passwordless sudo access for jensi
      tags: ansible
      lineinfile:
        path: /etc/sudoers.d/jensi
        line: "jensi ALL=(ALL) NOPASSWD: ALL"        # The exact line you want to add or to ensure to be present in the file..
        create: yes                                  # Ensures the file is created if it doesnâ€™t already exist.
        owner: root
        group: root
        mode: 0440
        state: present


- hosts: workstations
  become: true
  tasks:
    
    - name: install unzip
      package: 
        name: unzip

    - name: Install Terraform on Workstations
      unarchive:
        src: https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_linux_amd64.zip
        dest: /usr/local/bin
        remote_src: yes
        mode: 0755
        owner: root
        group: root


- hosts: proxmox
  become: true
  tasks:
    
    - name: install unzip
      package: 
        name: unzip

    - name: Install Terraform on ProxMox
      unarchive:
        src: https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_linux_amd64.zip
        dest: /usr/local/bin
        remote_src: yes
        mode: 0755
        owner: root
        group: root


- hosts: web_server                 # see "inventory" file             192.168.1.31 and 192.168.1.32 only
  tags: apache2,nginx,ubuntu
  become: true
  tasks:

    - name: ansible-client-1, install apache2 + php support for Ubuntu
      tags: apache,apache2,ubuntu
      package:                      # "package" is normore generic than "apt": generic OS package manager 
        name: 
          - "{{ web_package }}"     # Variable added, see inventory file
          - "{{ php_package }}"     # Variable added, see inventory file  
        state: latest 
        update_cache: yes 
      when: ansible_distribution in ["Debian", "Ubuntu"] and ansible_userspace_architecture in ["x86_64"] and ansible_hostname == "ansible-client-1"    

    - name: ansible-client-2, install nginx + php support for Ubuntu
      tags: apache,apache2,ubuntu
      package:                      # "package" is normore generic than "apt": generic OS package manager 
        name: 
          - "{{ web_package }}"     # Variable added, see inventory file
          - "{{ php_package }}"     # Variable added, see inventory file  
        state: latest 
        update_cache: yes 
      when: ansible_distribution in ["Debian", "Ubuntu"] and ansible_userspace_architecture in ["x86_64"] and ansible_hostname == "ansible-client-2"


    - name: install apache2 package + php support for CentOS # 1. This secton will install apache...
      tags: apache,centos,httpd
      dnf:                          # "package" is normore generic than "apt": generic OS package manager 
        name: 
          - httpd
          - php  
        state: latest 
        update_cache: yes 
      when: ansible_distribution in ["CentOS"]     
   
    - name: start httpd for CentOS (CentOS only)             # 2. ...and this section will start apache.
      tags: apache,centos,httpd
      service:
        name: httpd
        state: started
        enabled: yes
      when: ansible_distribution in ["CentOS"]     

    - name: change e-mail address for admin for CentOS (CentOS only)
      tags: apache,centos,httpd
      lineinfile: 
        path: /etc/httdp/conf/httpd.conf
        regexp: '^Serveradmin'
        line: ServerAdmin somebody@somewhere.net
      when: ansible_distribution in ["CentOS"]     
      register: httpd                                        # A. This variable is a reference. Includes a state of change... 

    - name: restart httpd (CentOS)
      tags: apache,centos,httpd
      service:
        name: httpd
        state: restarted
      when: httpd.changed                                    # B. ...used here


- name: Select Variables based on varname                    # Refer to variables.ini
  hosts: web_server
  gather_facts: no
  vars:
    varname: "{{ varname | default('Standard') }}"
    variables_file: "./variables.ini"
  tasks:
    - name: Check if varname section exists in variables.ini
      set_fact:
      # section_exists: "{{ (lookup('ini', 'name section=' + varname, file=variables_file, errors='ignore') | default('')) != '' }}"
        section_exists: "{{ lookup('ini', 'name section=' + varname, file=variables_file) is not none }}"
        
    - name: Read variables from the file based on varname
      set_fact:
        selected_name: "{{ lookup('ini', 'name section=' + (varname if section_exists else 'Standard'), file=variables_file) }}"
        selected_title: "{{ lookup('ini', 'title section=' + (varname if section_exists else 'Standard'), file=variables_file) }}"
        selected_url: "{{ lookup('ini', 'url section=' + (varname if section_exists else 'Standard'), file=variables_file) }}"

    - name: Display selected variables
      debug:
        msg:
          - "Name: {{ selected_name }}"
          - "Title: {{ selected_title }}"
          - "URL: {{ selected_url }}"

          
- name: User name, Current Time, Timezone
  hosts: web_server
  become: true
  tasks:
    - name: Get local time
      shell: timedatectl | grep "Local time" | awk '{print $3, $4}'
      register: local_time_result

    - name: Get timezone
      shell: timedatectl | grep "Time zone" | awk '{print $3}'
      register: time_zone_result

    - name: Set local_time variable
      set_fact:
        local_time: "{{ local_time_result.stdout }}"

    - name: Set time_zone variable
      set_fact:
        time_zone: "{{ time_zone_result.stdout }}"

    - name: Display local time
      debug:
        msg: "Local Time: {{ local_time }}"

    - name: Display time zone
      debug:
        msg: "Time Zone: {{ time_zone }}"   

    - name: Deploy dynamic HTML landing page
      tags: landing_page,website
      template:
        src: ./files/default_site.html.j2
        dest: /var/www/html/index.html
        owner: root
        group: root
        mode: 0744


- hosts: db_server                 # see "inventory" file             192.168.1.32 / 33 only
  become: true
  tasks:

    - name: install mariadb package for Ubuntu
      tags: db,mariadb,ubuntu
      package:
        name: mariadb-server
        state: latest
      when: ansible_distribution in ["Debian", "Ubuntu"]



- hosts: file_server                 # see "inventory" file             192.168.1.34 / 35 only
  become: true
  tasks:

    - name: install samba package
      tags: samba
      package:
        name: samba
        state: latest
      when: ansible_distribution in ["Debian", "Ubuntu", "CentOS"]


